services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - '80:80'
    volumes:
      - './src:/var/www/html'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      php-fpm:
        condition: service_started
    restart: unless-stopped
    networks:
      - frontend_net
      - backend_net
  php-fpm:
    build:
      context: ./docker/php
    container_name: php-fpm
    volumes:
      - './src:/var/www/html'
    working_dir: /var/www/html
    environment:
      XDEBUG_MODE: 'debug'
      XDEBUG_START_WITH_REQUEST: 'trigger'
      XDEBUG_CLIENT_HOST: 'host.docker.internal'
      XDEBUG_CLIENT_PORT: '9003'
      XDEBUG_LOG_LEVEL: '0'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - backend_net
  db:
    image: postgres:17-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_DB=cinema_db'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    restart: unless-stopped
    networks:
      - backend_net

volumes:
  postgres_data:

networks:
  frontend_net:
    driver: bridge
    name: frontend_net
  backend_net:
    driver: bridge
    name: backend_net
